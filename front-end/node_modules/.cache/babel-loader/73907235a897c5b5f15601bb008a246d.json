{"ast":null,"code":"var _jsxFileName = \"/home/praheja/Documents/Projects/BestCandidate/front-end/src/layout/Register.js\";\nimport React, { Component } from 'react';\nimport { Form, Button, Alert, ButtonGroup, ToggleButton } from 'react-bootstrap';\nexport class Register extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getLoginDivStyle = () => {\n      return {\n        margin: \"auto\",\n        width: \"50%\",\n        borderStyle: \"ridge\",\n        padding: '30px',\n        marginTop: '50px',\n        background: 'rgb(236, 234, 234)'\n      };\n    };\n\n    this.getFormStyle = () => {\n      return {\n        marginRight: \"20px\"\n      };\n    };\n\n    this.state = {\n      username: '',\n      password: '',\n      confPassword: '',\n      email: '',\n      credentialsMatch: true,\n      role: ''\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleUsername = this.handleUsername.bind(this);\n    this.handlePassword = this.handlePassword.bind(this);\n    this.handleRePassword = this.handleRePassword.bind(this);\n    this.handleEmail = this.handleEmail.bind(this);\n    this.handleRole = this.handleRole.bind(this);\n  }\n\n  handleUsername(event) {\n    event.preventDefault();\n    this.setState({\n      username: event.target.value\n    });\n  }\n\n  handleEmail(event) {\n    event.preventDefault();\n    this.setState({\n      email: event.target.value\n    });\n  }\n\n  handlePassword(event) {\n    event.preventDefault();\n    this.setState({\n      password: event.target.value\n    });\n  }\n\n  handleRePassword(event) {\n    event.preventDefault();\n    this.setState({\n      confPassword: event.target.value\n    });\n  }\n\n  handleRole(event) {\n    event.preventDefault();\n    console.log(\"this is the event\");\n    console.log(event);\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    console.log('checking username');\n    console.log(this.state.username);\n    console.log('checking usrname 1');\n    var registerCredentials = JSON.stringify({\n      username: this.state.username,\n      password: this.state.password,\n      role: this.state.role\n    });\n    fetch('http://localhost:5000/register', {\n      method: 'POST',\n      credentials: 'include',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: registerCredentials\n    }).then(response => response.json()).then(data => {\n      console.log('received response');\n      console.log(data);\n\n      if (data.authorized) {// is authorized defined?\n      } else {\n        this.setState({\n          credentialsMatch: false\n        });\n      }\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      style: this.getLoginDivStyle(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \"Create an account\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }), React.createElement(Form, {\n      style: this.getFormStyle(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      controlId: \"formBasicEmail\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(Form.Control, {\n      type: \"email\",\n      onClick: this.handleEmail,\n      placeholder: \"Email\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }), React.createElement(Form.Text, {\n      className: \"text-muted\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, \" We'll never share your email with anyone else. \")), React.createElement(Form.Control, {\n      type: \"text\",\n      placeholder: \"Enter username\",\n      onChange: this.handleUsername,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }), React.createElement(Form.Group, {\n      controlId: \"formBasicPassword\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(Form.Control, {\n      type: \"password\",\n      onClick: this.handlePassword,\n      placeholder: \"Password\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }), React.createElement(Form.Control, {\n      type: \"password\",\n      placeholder: \"Re-enter password\",\n      onChange: this.handleRePassword,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }), React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, \"I am a: \"), React.createElement(ButtonGroup, {\n      toggle: true,\n      className: \"mt-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(ToggleButton, {\n      type: \"radio\",\n      name: \"radio\",\n      defaultChecked: true,\n      value: \"1\",\n      onClick: this.handleRole,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, \"Candidate\"), React.createElement(ToggleButton, {\n      type: \"radio\",\n      name: \"radio\",\n      value: \"2\",\n      onClick: this.handleRole,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, \"Recruiter\")), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }), React.createElement(Button, {\n      variant: \"primary\",\n      onClick: this.handleSubmit,\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, \"Submit\")));\n  }\n\n}\nexport default Register;","map":{"version":3,"sources":["/home/praheja/Documents/Projects/BestCandidate/front-end/src/layout/Register.js"],"names":["React","Component","Form","Button","Alert","ButtonGroup","ToggleButton","Register","constructor","props","getLoginDivStyle","margin","width","borderStyle","padding","marginTop","background","getFormStyle","marginRight","state","username","password","confPassword","email","credentialsMatch","role","handleSubmit","bind","handleUsername","handlePassword","handleRePassword","handleEmail","handleRole","event","preventDefault","setState","target","value","console","log","registerCredentials","JSON","stringify","fetch","method","credentials","headers","body","then","response","json","data","authorized","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport {Form, Button, Alert, ButtonGroup, ToggleButton} from 'react-bootstrap'\n\n\nexport class Register extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            username:'',\n            password:'',\n            confPassword:'',\n            email:'',\n            credentialsMatch:true,\n            role: ''\n        };\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleUsername = this.handleUsername.bind(this);\n        this.handlePassword = this.handlePassword.bind(this);\n        this.handleRePassword = this.handleRePassword.bind(this);\n        this.handleEmail = this.handleEmail.bind(this);\n        this.handleRole = this.handleRole.bind(this);\n    }\n    \n    handleUsername(event) {\n        event.preventDefault();\n        this.setState({username:event.target.value});\n    }\n    \n    handleEmail(event) {\n        event.preventDefault();\n        this.setState({email:event.target.value});\n    }\n    \n    handlePassword(event) {\n        event.preventDefault();\n        this.setState({password:event.target.value});\n    }\n    \n    handleRePassword(event) {\n        event.preventDefault();\n        this.setState({confPassword:event.target.value});\n    }\n\n    handleRole(event){\n        event.preventDefault();\n        console.log(\"this is the event\");\n        console.log(event);\n    }\n\n    handleSubmit(event) {\n\n        event.preventDefault();\n        console.log('checking username');\n        console.log(this.state.username);\n        console.log('checking usrname 1');\n        \n            var registerCredentials = JSON.stringify({\n                username:this.state.username,\n                password:this.state.password,\n                role:this.state.role\n            })\n        \n    \n        fetch('http://localhost:5000/register' , {\n        method:'POST',\n        credentials:'include',\n        headers:{'Content-Type':'application/json'},\n        body:registerCredentials\n        })\n        .then(response => response.json())\n        .then(data => {\n        console.log('received response');\n        console.log(data);\n        if(data.authorized) {\n            // is authorized defined?\n        }\n        else {\n            this.setState({credentialsMatch:false});       \n        } \n        \n        })\n        \n    }\n    \n\n\n\n\n    render() {\n        return (\n            <div style={this.getLoginDivStyle()}>\n                <h2>Create an account</h2> \n                <br/>\n               <Form style={this.getFormStyle()}>\n                    <Form.Group controlId=\"formBasicEmail\">\n                        <Form.Control type=\"email\" onClick={this.handleEmail} placeholder=\"Email\" required/>\n                        <Form.Text className=\"text-muted\"> We'll never share your email with anyone else. </Form.Text>\n                    </Form.Group>\n                    <Form.Control type='text' placeholder='Enter username' onChange={this.handleUsername} required/>\n                    <Form.Group controlId=\"formBasicPassword\">\n                        <Form.Control type=\"password\" onClick={this.handlePassword} placeholder=\"Password\" required/>\n                        <Form.Control type='password' placeholder='Re-enter password' onChange={this.handleRePassword} required/>\n                    </Form.Group>\n                    <br/>\n                    <h5>I am a: </h5>\n                    <ButtonGroup toggle className=\"mt-2\">\n                        <ToggleButton type=\"radio\" name=\"radio\" defaultChecked value=\"1\" onClick={this.handleRole}>Candidate</ToggleButton>\n                        <ToggleButton type=\"radio\" name=\"radio\" value=\"2\" onClick={this.handleRole}>Recruiter</ToggleButton>\n                    </ButtonGroup>\n                    \n                    <br/>\n                    <br/>\n                    <Button variant=\"primary\"  onClick={this.handleSubmit} type=\"submit\">Submit</Button>\n                </Form>\n            </div>\n            \n        )\n    }\n\n\n    getLoginDivStyle = () => {\n        return {\n            margin: \"auto\",\n            width: \"50%\",\n            borderStyle: \"ridge\",\n            padding: '30px',\n            marginTop: '50px',\n            background: 'rgb(236, 234, 234)'\n           \n        }   \n    }\n\n    getFormStyle = () => {\n        return {\n            marginRight: \"20px\"\n        }\n    }\n}\n\nexport default Register\n"]},"metadata":{},"sourceType":"module"}