{"ast":null,"code":"var _jsxFileName = \"/home/praheja/Documents/Projects/BestCandidate/front-end/src/layout/Login.js\";\nimport React, { Component } from 'react';\nimport { Form, Button, Alert } from 'react-bootstrap';\nexport class Login extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getLoginDivStyle = () => {\n      return {\n        margin: \"auto\",\n        width: \"50%\",\n        borderStyle: \"ridge\",\n        padding: '30px',\n        marginTop: '50px',\n        background: 'rgb(236, 234, 234)'\n      };\n    };\n\n    this.getFormStyle = () => {\n      return {\n        marginRight: \"20px\"\n      };\n    };\n\n    const cookies = props.cookies;\n    this.state = {\n      loggedIn: false,\n      username: '',\n      password: '',\n      invalidCredentials: false\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleEmailInput = this.handleEmailInput.bind(this);\n    this.handlePasswordInput = this.handlePasswordInput.bind(this);\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    console.log(\"sending \" + this.state.username + \" and \" + this.state.password);\n    const cookies = this.props.cookies;\n    fetch('http://localhost:5000/login', {\n      method: 'POST',\n      credentials: 'include',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        username: this.state.username,\n        password: this.state.password\n      })\n    }).then(response => response.json()).then(data => {\n      console.log(data);\n      console.log('received response');\n\n      if (data.access_token) {\n        this.setState({\n          invalidCredentials: false\n        });\n        cookies.set('accessToken', data.access_token, {\n          path: '/'\n        }); //store the received tokens\n\n        cookies.set('refreshToken', data.refresh_token, {\n          path: '/'\n        });\n        this.setState({\n          loggedIn: true\n        });\n        this.props.history.push('/');\n      } else {\n        this.setState({\n          invalidCredentials: true\n        }); //show the notification that says invalid password\n      }\n    });\n  }\n\n  handleEmailInput(event) {\n    event.preventDefault();\n    this.setState({\n      username: event.target.value\n    });\n    console.log(event.target.value);\n  }\n\n  handlePasswordInput(event) {\n    event.preventDefault();\n    this.setState({\n      username: event.target.value\n    });\n    console.log(\"Something going in the password\");\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      style: this.getLoginDivStyle(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"Login\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }), React.createElement(Form, {\n      style: this.getFormStyle(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      controlId: \"formBasicEmail\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(Form.Control, {\n      type: \"email\",\n      onClick: this.handleEmailInput,\n      placeholder: \"Email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }), React.createElement(Form.Text, {\n      className: \"text-muted\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \" We'll never share your email with anyone else. \")), React.createElement(Form.Group, {\n      controlId: \"formBasicPassword\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(Form.Control, {\n      type: \"password\",\n      onClick: this.handlePasswordInput,\n      placeholder: \"Password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }), React.createElement(Button, {\n      variant: \"primary\",\n      onClick: this.handleSubmit,\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"Submit\")), this.state.invalidCredentials ? React.createElement(Alert, {\n      variant: \"danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \" Invalid Login Credentials \") : null, this.state.loggedIn ? React.createElement(Alert, {\n      variant: \"success\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \" You are logged in \") : null);\n  }\n\n}\nexport default Login;","map":{"version":3,"sources":["/home/praheja/Documents/Projects/BestCandidate/front-end/src/layout/Login.js"],"names":["React","Component","Form","Button","Alert","Login","constructor","props","getLoginDivStyle","margin","width","borderStyle","padding","marginTop","background","getFormStyle","marginRight","cookies","state","loggedIn","username","password","invalidCredentials","handleSubmit","bind","handleEmailInput","handlePasswordInput","event","preventDefault","console","log","fetch","method","credentials","headers","body","JSON","stringify","then","response","json","data","access_token","setState","set","path","refresh_token","history","push","target","value","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport {Form, Button, Alert} from 'react-bootstrap'\n\nexport class Login extends Component {\n\n\n    constructor(props){\n        super(props);\n        const { cookies } = props;\n        this.state = {loggedIn: false, username: '', password: '', invalidCredentials: false};\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleEmailInput = this.handleEmailInput.bind(this);\n        this.handlePasswordInput = this.handlePasswordInput.bind(this);\n    }\n\n    handleSubmit(event) {\n\n        event.preventDefault();\n        console.log(\"sending \"+this.state.username+\" and \"+this.state.password);\n        const {cookies} = this.props;\n        \n        fetch('http://localhost:5000/login' , {method:'POST',credentials:'include',headers:{'Content-Type':'application/json'},\n        body:JSON.stringify({\n            username: this.state.username,\n            password: this.state.password\n        })\n        })\n        .then(response => response.json()) \n        .then(data => {\n        console.log(data);\n        console.log('received response');\n        if(data.access_token) {\n            this.setState({invalidCredentials:false});\n            cookies.set('accessToken',data.access_token,{path:'/'}); //store the received tokens\n            cookies.set('refreshToken', data.refresh_token, {path: '/'});\n            this.setState({loggedIn:true});\n            this.props.history.push('/');\n        }else {\n            this.setState({invalidCredentials:true}); //show the notification that says invalid password\n        }\n        })\n        \n    }\n\n    handleEmailInput(event){\n        event.preventDefault();\n        this.setState({username : event.target.value});\n        console.log(event.target.value);\n    }\n\n    handlePasswordInput(event){\n        event.preventDefault();\n        this.setState({username : event.target.value});\n        console.log(\"Something going in the password\");\n    }\n\n\n    render() {\n        return (\n            <div style={this.getLoginDivStyle()}>\n                <h2>Login</h2> \n                <br/>\n               <Form style={this.getFormStyle()}>\n                    <Form.Group controlId=\"formBasicEmail\">\n                        <Form.Control type=\"email\" onClick={this.handleEmailInput} placeholder=\"Email\"/>\n                        <Form.Text className=\"text-muted\"> We'll never share your email with anyone else. </Form.Text>\n                    </Form.Group>\n                    <Form.Group controlId=\"formBasicPassword\">\n                        <Form.Control type=\"password\" onClick={this.handlePasswordInput} placeholder=\"Password\" />\n                    </Form.Group>\n                    <br/>\n                    <Button variant=\"primary\"  onClick={this.handleSubmit} type=\"submit\">Submit</Button>\n                </Form>\n                {\n                this.state.invalidCredentials ?\n                <Alert variant='danger'> Invalid Login Credentials </Alert>\n                :null\n                }\n                {\n                this.state.loggedIn ?\n                <Alert variant='success'> You are logged in </Alert>\n                :null\n                }\n            </div>\n        )\n    }\n\n\n    getLoginDivStyle = () => {\n        return {\n            margin: \"auto\",\n            width: \"50%\",\n            borderStyle: \"ridge\",\n            padding: '30px',\n            marginTop: '50px',\n            background: 'rgb(236, 234, 234)'\n           \n        }   \n    }\n\n    getFormStyle = () => {\n        return {\n            marginRight: \"20px\"\n        }\n    }\n}\n\nexport default Login\n"]},"metadata":{},"sourceType":"module"}